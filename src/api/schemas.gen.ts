// This file is auto-generated by @hey-api/openapi-ts

export const Body_add_file_storage__user_id__postSchema = {
  properties: {
    file: {
      type: 'string',
      format: 'binary',
      title: 'File',
    },
  },
  type: 'object',
  required: ['file'],
  title: 'Body_add_file_storage__user_id__post',
} as const;

export const CardSchema = {
  properties: {
    content: {
      type: 'string',
      title: 'Content',
    },
    id: {
      type: 'integer',
      title: 'Id',
    },
  },
  type: 'object',
  required: ['content', 'id'],
  title: 'Card',
} as const;

export const CardCreateSchema = {
  properties: {
    content: {
      type: 'string',
      title: 'Content',
    },
  },
  type: 'object',
  required: ['content'],
  title: 'CardCreate',
} as const;

export const CollectionSchema = {
  properties: {
    title: {
      type: 'string',
      maxLength: 100,
      title: 'Title',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
    id: {
      type: 'integer',
      title: 'Id',
    },
    owner_id: {
      type: 'integer',
      title: 'Owner Id',
    },
  },
  type: 'object',
  required: ['title', 'id', 'owner_id'],
  title: 'Collection',
} as const;

export const CollectionCreateSchema = {
  properties: {
    title: {
      type: 'string',
      maxLength: 100,
      title: 'Title',
    },
    description: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'null',
        },
      ],
      title: 'Description',
    },
  },
  type: 'object',
  required: ['title'],
  title: 'CollectionCreate',
} as const;

export const FileUploadedSchemeSchema = {
  properties: {
    url: {
      type: 'string',
      title: 'Url',
    },
  },
  type: 'object',
  required: ['url'],
  title: 'FileUploadedScheme',
} as const;

export const HTTPValidationErrorSchema = {
  properties: {
    detail: {
      items: {
        $ref: '#/components/schemas/ValidationError',
      },
      type: 'array',
      title: 'Detail',
    },
  },
  type: 'object',
  title: 'HTTPValidationError',
} as const;

export const TrainRecordSchema = {
  properties: {
    meta_data: {
      type: 'string',
      title: 'Meta Data',
    },
    id: {
      type: 'integer',
      title: 'Id',
    },
    card_id: {
      type: 'integer',
      title: 'Card Id',
    },
    user_id: {
      type: 'integer',
      title: 'User Id',
    },
  },
  type: 'object',
  required: ['meta_data', 'id', 'card_id', 'user_id'],
  title: 'TrainRecord',
} as const;

export const TrainRecordCreateSchema = {
  properties: {
    meta_data: {
      type: 'string',
      title: 'Meta Data',
    },
  },
  type: 'object',
  required: ['meta_data'],
  title: 'TrainRecordCreate',
} as const;

export const UserSchema = {
  properties: {
    email: {
      type: 'string',
      title: 'Email',
    },
    nickname: {
      type: 'string',
      maxLength: 50,
      title: 'Nickname',
    },
    id: {
      type: 'integer',
      title: 'Id',
    },
  },
  type: 'object',
  required: ['email', 'nickname', 'id'],
  title: 'User',
} as const;

export const UserCreateSchema = {
  properties: {
    email: {
      type: 'string',
      title: 'Email',
    },
    nickname: {
      type: 'string',
      maxLength: 50,
      title: 'Nickname',
    },
    password: {
      type: 'string',
      maxLength: 128,
      minLength: 13,
      title: 'Password',
    },
  },
  type: 'object',
  required: ['email', 'nickname', 'password'],
  title: 'UserCreate',
} as const;

export const ValidationErrorSchema = {
  properties: {
    loc: {
      items: {
        anyOf: [
          {
            type: 'string',
          },
          {
            type: 'integer',
          },
        ],
      },
      type: 'array',
      title: 'Location',
    },
    msg: {
      type: 'string',
      title: 'Message',
    },
    type: {
      type: 'string',
      title: 'Error Type',
    },
  },
  type: 'object',
  required: ['loc', 'msg', 'type'],
  title: 'ValidationError',
} as const;
