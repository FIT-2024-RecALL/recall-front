// This file is auto-generated by @hey-api/openapi-ts

export type AIFeedback = {
  mark: number;
  comment: string;
};

export type Body_add_file_storage__post = {
  file: Blob | File;
};

export type Body_create_card_cards__post = {
  card: CardCreate;
  collections: Array<number>;
};

export type Body_update_card_cards__card_id__put = {
  new_card: CardCreate;
  collections: Array<number>;
};

export type Card = {
  id: number;
  isPublic: boolean;
  frontSide: string;
  backSide: string;
  ownerId: number;
};

export type CardCreate = {
  frontSide: string;
  backSide: string;
};

export type Collection = {
  id: number;
  isPublic: boolean;
  title: string;
  description?: string | null;
  ownerId: number;
};

export type CollectionCreate = {
  title: string;
  description?: string | null;
};

export type CollectionShort = {
  id: number;
  isPublic: boolean;
  ownerId: number;
  title: string;
};

export type FileMeta = {
  id: number;
  isPublic: boolean;
  ownerId: number;
  filename: string;
  type: 'image' | 'video' | 'audio';
  ext:
    | 'bmp'
    | 'gif'
    | 'jpg'
    | 'jpeg'
    | 'png'
    | 'svg'
    | 'tif'
    | 'tiff'
    | 'webp'
    | 'avi'
    | 'm4v'
    | 'mkv'
    | 'mov'
    | 'mpg'
    | 'mp4'
    | 'ogv'
    | 'webm'
    | 'wmv'
    | 'aac'
    | 'flac'
    | 'm4a'
    | 'mp3'
    | 'mpeg'
    | 'oga'
    | 'ogg'
    | 'wav';
};

export type type = 'image' | 'video' | 'audio';

export type ext =
  | 'bmp'
  | 'gif'
  | 'jpg'
  | 'jpeg'
  | 'png'
  | 'svg'
  | 'tif'
  | 'tiff'
  | 'webp'
  | 'avi'
  | 'm4v'
  | 'mkv'
  | 'mov'
  | 'mpg'
  | 'mp4'
  | 'ogv'
  | 'webm'
  | 'wmv'
  | 'aac'
  | 'flac'
  | 'm4a'
  | 'mp3'
  | 'mpeg'
  | 'oga'
  | 'ogg'
  | 'wav';

export type HTTPValidationError = {
  detail?: Array<ValidationError>;
};

export type TrainRecord = {
  mark: number;
  id: number;
  cardId: number;
  userId: number;
  repeatDate: string;
  nextRepeatDate: string;
  progress: number;
};

export type TrainRecordCreate = {
  mark: number;
};

export type User = {
  nickname: string;
  email: string;
  id: number;
};

export type UserAnswer = {
  answer: string;
};

export type UserAuth = {
  email: string;
  password: string;
};

export type UserBase = {
  nickname: string;
  email: string;
};

export type UserCreate = {
  nickname: string;
  email: string;
  password: string;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type ReadCardCardsCardIdGetData = {
  path: {
    card_id: number;
  };
};

export type ReadCardCardsCardIdGetResponse = Card;

export type ReadCardCardsCardIdGetError = HTTPValidationError;

export type UpdateCardCardsCardIdPutData = {
  body: Body_update_card_cards__card_id__put;
  path: {
    card_id: number;
  };
};

export type UpdateCardCardsCardIdPutResponse = Card;

export type UpdateCardCardsCardIdPutError = HTTPValidationError;

export type DeleteCardCardsCardIdDeleteData = {
  path: {
    card_id: number;
  };
};

export type DeleteCardCardsCardIdDeleteResponse = unknown;

export type DeleteCardCardsCardIdDeleteError = HTTPValidationError;

export type ReadCardCollectionsCardsCardIdCollectionsGetData = {
  path: {
    card_id: number;
  };
};

export type ReadCardCollectionsCardsCardIdCollectionsGetResponse =
  Array<CollectionShort>;

export type ReadCardCollectionsCardsCardIdCollectionsGetError =
  HTTPValidationError;

export type CreateCardCardsPostData = {
  body: Body_create_card_cards__post;
};

export type CreateCardCardsPostResponse = Card;

export type CreateCardCardsPostError = HTTPValidationError;

export type ReadCollectionCollectionsCollectionIdGetData = {
  path: {
    collection_id: number;
  };
};

export type ReadCollectionCollectionsCollectionIdGetResponse = Collection;

export type ReadCollectionCollectionsCollectionIdGetError = HTTPValidationError;

export type UpdateCollectionCollectionsCollectionIdPutData = {
  body: CollectionCreate;
  path: {
    collection_id: number;
  };
};

export type UpdateCollectionCollectionsCollectionIdPutResponse = Collection;

export type UpdateCollectionCollectionsCollectionIdPutError =
  HTTPValidationError;

export type DeleteCollectionCollectionsCollectionIdDeleteData = {
  path: {
    collection_id: number;
  };
};

export type DeleteCollectionCollectionsCollectionIdDeleteResponse = unknown;

export type DeleteCollectionCollectionsCollectionIdDeleteError =
  HTTPValidationError;

export type ReadCollectionsCollectionsGetData = {
  query?: {
    limit?: number;
    skip?: number;
  };
};

export type ReadCollectionsCollectionsGetResponse = Array<CollectionShort>;

export type ReadCollectionsCollectionsGetError = HTTPValidationError;

export type CreateCollectionCollectionsPostData = {
  body: CollectionCreate;
};

export type CreateCollectionCollectionsPostResponse = Collection;

export type CreateCollectionCollectionsPostError = HTTPValidationError;

export type ReadCollectionCardsCollectionsCollectionIdCardsGetData = {
  path: {
    collection_id: number;
  };
};

export type ReadCollectionCardsCollectionsCollectionIdCardsGetResponse =
  Array<number>;

export type ReadCollectionCardsCollectionsCollectionIdCardsGetError =
  HTTPValidationError;

export type TrainCardsCollectionsCollectionIdCardsTrainGetData = {
  path: {
    collection_id: number;
  };
};

export type TrainCardsCollectionsCollectionIdCardsTrainGetResponse =
  Array<number>;

export type TrainCardsCollectionsCollectionIdCardsTrainGetError =
  HTTPValidationError;

export type UpdateCollectionPublicityCollectionsCollectionIdPublicityPutData = {
  path: {
    collection_id: number;
  };
  query: {
    is_public: boolean;
  };
};

export type UpdateCollectionPublicityCollectionsCollectionIdPublicityPutResponse =
  Collection;

export type UpdateCollectionPublicityCollectionsCollectionIdPublicityPutError =
  HTTPValidationError;

export type AddFileStoragePostData = {
  body: Body_add_file_storage__post;
};

export type AddFileStoragePostResponse = FileMeta;

export type AddFileStoragePostError = HTTPValidationError;

export type GetFileMetaStorageFileIdMetaGetData = {
  path: {
    file_id: number;
  };
};

export type GetFileMetaStorageFileIdMetaGetResponse = FileMeta;

export type GetFileMetaStorageFileIdMetaGetError = HTTPValidationError;

export type GetFileCardsStorageFileIdCardsGetData = {
  path: {
    file_id: number;
  };
};

export type GetFileCardsStorageFileIdCardsGetResponse = Array<number>;

export type GetFileCardsStorageFileIdCardsGetError = HTTPValidationError;

export type GetFileStorageFileIdGetData = {
  path: {
    file_id: number;
  };
};

export type GetFileStorageFileIdGetResponse = unknown;

export type GetFileStorageFileIdGetError = HTTPValidationError;

export type DeleteFileStorageFileIdDeleteData = {
  path: {
    file_id: number;
  };
};

export type DeleteFileStorageFileIdDeleteResponse = unknown;

export type DeleteFileStorageFileIdDeleteError = HTTPValidationError;

export type ReadCardLastTrainRecordTrainRecordsLastCardIdGetData = {
  path: {
    card_id: number;
  };
};

export type ReadCardLastTrainRecordTrainRecordsLastCardIdGetResponse =
  TrainRecord | null;

export type ReadCardLastTrainRecordTrainRecordsLastCardIdGetError =
  HTTPValidationError;

export type CreateTrainRecordTrainRecordsCardIdPostData = {
  body: TrainRecordCreate;
  path: {
    card_id: number;
  };
};

export type CreateTrainRecordTrainRecordsCardIdPostResponse = TrainRecord;

export type CreateTrainRecordTrainRecordsCardIdPostError = HTTPValidationError;

export type CompareAnswersByAiTrainRecordsCardIdComparePostData = {
  body: UserAnswer;
  path: {
    card_id: number;
  };
};

export type CompareAnswersByAiTrainRecordsCardIdComparePostResponse =
  AIFeedback;

export type CompareAnswersByAiTrainRecordsCardIdComparePostError =
  HTTPValidationError;

export type ReadUserUserProfileGetResponse = User;

export type ReadUserUserProfileGetError = unknown;

export type ReadUserCollectionsUserCollectionsGetData = {
  query?: {
    limit?: number | null;
    offset?: number;
  };
};

export type ReadUserCollectionsUserCollectionsGetResponse =
  Array<CollectionShort>;

export type ReadUserCollectionsUserCollectionsGetError = HTTPValidationError;

export type ReadUserCardsUserCardsGetData = {
  query?: {
    limit?: number | null;
    skip?: number;
  };
};

export type ReadUserCardsUserCardsGetResponse = Array<number>;

export type ReadUserCardsUserCardsGetError = HTTPValidationError;

export type ReadUserFilesUserFilesGetData = {
  query?: {
    limit?: number | null;
    skip?: number;
  };
};

export type ReadUserFilesUserFilesGetResponse = Array<number>;

export type ReadUserFilesUserFilesGetError = HTTPValidationError;

export type CreateUserUserRegisterPostData = {
  body: UserCreate;
  query?: {
    auto_login?: boolean;
  };
};

export type CreateUserUserRegisterPostResponse = User;

export type CreateUserUserRegisterPostError = HTTPValidationError;

export type UpdateUserUserEditProfilePutData = {
  body: UserBase;
};

export type UpdateUserUserEditProfilePutResponse = User;

export type UpdateUserUserEditProfilePutError = HTTPValidationError;

export type DeleteUserUserDeleteProfileDeleteResponse = unknown;

export type DeleteUserUserDeleteProfileDeleteError = unknown;

export type AuthenticateUserUserLoginPostData = {
  body: UserAuth;
};

export type AuthenticateUserUserLoginPostResponse = User;

export type AuthenticateUserUserLoginPostError = HTTPValidationError;

export type LogoutUserUserLogoutPostResponse = unknown;

export type LogoutUserUserLogoutPostError = unknown;
