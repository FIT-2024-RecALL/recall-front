// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
} from '@hey-api/client-fetch';
import type {
  ReadCardCardsCardIdGetData,
  ReadCardCardsCardIdGetError,
  ReadCardCardsCardIdGetResponse,
  DeleteCardCardsCardIdDeleteData,
  DeleteCardCardsCardIdDeleteError,
  DeleteCardCardsCardIdDeleteResponse,
  ReadCardsCardsGetData,
  ReadCardsCardsGetError,
  ReadCardsCardsGetResponse,
  CreateCardCardsPostData,
  CreateCardCardsPostError,
  CreateCardCardsPostResponse,
  ReadCollectionCollectionsCollectionIdGetData,
  ReadCollectionCollectionsCollectionIdGetError,
  ReadCollectionCollectionsCollectionIdGetResponse,
  ReadCollectionsCollectionsGetData,
  ReadCollectionsCollectionsGetError,
  ReadCollectionsCollectionsGetResponse,
  CreateCollectionCollectionsPostData,
  CreateCollectionCollectionsPostError,
  CreateCollectionCollectionsPostResponse,
  ReadCollectionCardsCollectionsCollectionIdCardsGetData,
  ReadCollectionCardsCollectionsCollectionIdCardsGetError,
  ReadCollectionCardsCollectionsCollectionIdCardsGetResponse,
  SetCardCollectionConnectionCollectionsCollectionIdPairPostData,
  SetCardCollectionConnectionCollectionsCollectionIdPairPostError,
  SetCardCollectionConnectionCollectionsCollectionIdPairPostResponse,
  DeleteCardCollectionConnectionCollectionsCollectionIdUnpairDeleteData,
  DeleteCardCollectionConnectionCollectionsCollectionIdUnpairDeleteError,
  DeleteCardCollectionConnectionCollectionsCollectionIdUnpairDeleteResponse,
  ReadTrainRecordTrainRecordsAdminTrainRecordIdGetData,
  ReadTrainRecordTrainRecordsAdminTrainRecordIdGetError,
  ReadTrainRecordTrainRecordsAdminTrainRecordIdGetResponse,
  ReadTrainRecordsTrainRecordsAdminGetData,
  ReadTrainRecordsTrainRecordsAdminGetError,
  ReadTrainRecordsTrainRecordsAdminGetResponse,
  ReadUserTrainRecordsTrainRecordsGetError,
  ReadUserTrainRecordsTrainRecordsGetResponse,
  CreateTrainRecordForUserTrainRecordsCardIdPostData,
  CreateTrainRecordForUserTrainRecordsCardIdPostError,
  CreateTrainRecordForUserTrainRecordsCardIdPostResponse,
  ReadUserCardTrainRecordsTrainRecordsCardIdGetData,
  ReadUserCardTrainRecordsTrainRecordsCardIdGetError,
  ReadUserCardTrainRecordsTrainRecordsCardIdGetResponse,
  ReadUserCardLastTrainRecordTrainRecordsRecordCardIdGetData,
  ReadUserCardLastTrainRecordTrainRecordsRecordCardIdGetError,
  ReadUserCardLastTrainRecordTrainRecordsRecordCardIdGetResponse,
  ReadUsersUsersGetData,
  ReadUsersUsersGetError,
  ReadUsersUsersGetResponse,
  ReadCurrentUserUsersProfileGetError,
  ReadCurrentUserUsersProfileGetResponse,
  ReadUserUsersUserIdGetData,
  ReadUserUsersUserIdGetError,
  ReadUserUsersUserIdGetResponse,
  CreateUserUsersRegisterPostData,
  CreateUserUsersRegisterPostError,
  CreateUserUsersRegisterPostResponse,
  AuthenticateUserUsersLoginPostData,
  AuthenticateUserUsersLoginPostError,
  AuthenticateUserUsersLoginPostResponse,
  LogoutUserUsersLogoutPostError,
  LogoutUserUsersLogoutPostResponse,
} from './types.gen';

export const client = createClient(createConfig());

/**
 * Read Card
 */
export const readCardCardsCardIdGet = <ThrowOnError extends boolean = false>(
  options: Options<ReadCardCardsCardIdGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReadCardCardsCardIdGetResponse,
    ReadCardCardsCardIdGetError,
    ThrowOnError
  >({
    ...options,
    url: '/cards/{card_id}',
  });
};

/**
 * Delete Card
 */
export const deleteCardCardsCardIdDelete = <
  ThrowOnError extends boolean = false
>(
  options: Options<DeleteCardCardsCardIdDeleteData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteCardCardsCardIdDeleteResponse,
    DeleteCardCardsCardIdDeleteError,
    ThrowOnError
  >({
    ...options,
    url: '/cards/{card_id}',
  });
};

/**
 * Read Cards
 */
export const readCardsCardsGet = <ThrowOnError extends boolean = false>(
  options?: Options<ReadCardsCardsGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReadCardsCardsGetResponse,
    ReadCardsCardsGetError,
    ThrowOnError
  >({
    ...options,
    url: '/cards/',
  });
};

/**
 * Create Card
 */
export const createCardCardsPost = <ThrowOnError extends boolean = false>(
  options: Options<CreateCardCardsPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateCardCardsPostResponse,
    CreateCardCardsPostError,
    ThrowOnError
  >({
    ...options,
    url: '/cards/',
  });
};

/**
 * Read Collection
 */
export const readCollectionCollectionsCollectionIdGet = <
  ThrowOnError extends boolean = false
>(
  options: Options<ReadCollectionCollectionsCollectionIdGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReadCollectionCollectionsCollectionIdGetResponse,
    ReadCollectionCollectionsCollectionIdGetError,
    ThrowOnError
  >({
    ...options,
    url: '/collections/{collection_id}',
  });
};

/**
 * Read Collections
 */
export const readCollectionsCollectionsGet = <
  ThrowOnError extends boolean = false
>(
  options?: Options<ReadCollectionsCollectionsGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReadCollectionsCollectionsGetResponse,
    ReadCollectionsCollectionsGetError,
    ThrowOnError
  >({
    ...options,
    url: '/collections/',
  });
};

/**
 * Create Collection
 */
export const createCollectionCollectionsPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<CreateCollectionCollectionsPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateCollectionCollectionsPostResponse,
    CreateCollectionCollectionsPostError,
    ThrowOnError
  >({
    ...options,
    url: '/collections/',
  });
};

/**
 * Read Collection Cards
 */
export const readCollectionCardsCollectionsCollectionIdCardsGet = <
  ThrowOnError extends boolean = false
>(
  options: Options<
    ReadCollectionCardsCollectionsCollectionIdCardsGetData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    ReadCollectionCardsCollectionsCollectionIdCardsGetResponse,
    ReadCollectionCardsCollectionsCollectionIdCardsGetError,
    ThrowOnError
  >({
    ...options,
    url: '/collections/{collection_id}/cards',
  });
};

/**
 * Set Card Collection Connection
 */
export const setCardCollectionConnectionCollectionsCollectionIdPairPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<
    SetCardCollectionConnectionCollectionsCollectionIdPairPostData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).post<
    SetCardCollectionConnectionCollectionsCollectionIdPairPostResponse,
    SetCardCollectionConnectionCollectionsCollectionIdPairPostError,
    ThrowOnError
  >({
    ...options,
    url: '/collections/{collection_id}/pair',
  });
};

/**
 * Delete Card Collection Connection
 */
export const deleteCardCollectionConnectionCollectionsCollectionIdUnpairDelete =
  <ThrowOnError extends boolean = false>(
    options: Options<
      DeleteCardCollectionConnectionCollectionsCollectionIdUnpairDeleteData,
      ThrowOnError
    >
  ) => {
    return (options?.client ?? client).delete<
      DeleteCardCollectionConnectionCollectionsCollectionIdUnpairDeleteResponse,
      DeleteCardCollectionConnectionCollectionsCollectionIdUnpairDeleteError,
      ThrowOnError
    >({
      ...options,
      url: '/collections/{collection_id}/unpair',
    });
  };

/**
 * Read Train Record
 */
export const readTrainRecordTrainRecordsAdminTrainRecordIdGet = <
  ThrowOnError extends boolean = false
>(
  options: Options<
    ReadTrainRecordTrainRecordsAdminTrainRecordIdGetData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    ReadTrainRecordTrainRecordsAdminTrainRecordIdGetResponse,
    ReadTrainRecordTrainRecordsAdminTrainRecordIdGetError,
    ThrowOnError
  >({
    ...options,
    url: '/train_records/admin/{train_record_id}',
  });
};

/**
 * Read Train Records
 */
export const readTrainRecordsTrainRecordsAdminGet = <
  ThrowOnError extends boolean = false
>(
  options?: Options<ReadTrainRecordsTrainRecordsAdminGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReadTrainRecordsTrainRecordsAdminGetResponse,
    ReadTrainRecordsTrainRecordsAdminGetError,
    ThrowOnError
  >({
    ...options,
    url: '/train_records/admin',
  });
};

/**
 * Read User Train Records
 */
export const readUserTrainRecordsTrainRecordsGet = <
  ThrowOnError extends boolean = false
>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReadUserTrainRecordsTrainRecordsGetResponse,
    ReadUserTrainRecordsTrainRecordsGetError,
    ThrowOnError
  >({
    ...options,
    url: '/train_records/',
  });
};

/**
 * Create Train Record For User
 */
export const createTrainRecordForUserTrainRecordsCardIdPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<
    CreateTrainRecordForUserTrainRecordsCardIdPostData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).post<
    CreateTrainRecordForUserTrainRecordsCardIdPostResponse,
    CreateTrainRecordForUserTrainRecordsCardIdPostError,
    ThrowOnError
  >({
    ...options,
    url: '/train_records/{card_id}',
  });
};

/**
 * Read User Card Train Records
 */
export const readUserCardTrainRecordsTrainRecordsCardIdGet = <
  ThrowOnError extends boolean = false
>(
  options: Options<
    ReadUserCardTrainRecordsTrainRecordsCardIdGetData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    ReadUserCardTrainRecordsTrainRecordsCardIdGetResponse,
    ReadUserCardTrainRecordsTrainRecordsCardIdGetError,
    ThrowOnError
  >({
    ...options,
    url: '/train_records/{card_id}',
  });
};

/**
 * Read User Card Last Train Record
 */
export const readUserCardLastTrainRecordTrainRecordsRecordCardIdGet = <
  ThrowOnError extends boolean = false
>(
  options: Options<
    ReadUserCardLastTrainRecordTrainRecordsRecordCardIdGetData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    ReadUserCardLastTrainRecordTrainRecordsRecordCardIdGetResponse,
    ReadUserCardLastTrainRecordTrainRecordsRecordCardIdGetError,
    ThrowOnError
  >({
    ...options,
    url: '/train_records/record/{card_id}',
  });
};

/**
 * Read Users
 */
export const readUsersUsersGet = <ThrowOnError extends boolean = false>(
  options?: Options<ReadUsersUsersGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReadUsersUsersGetResponse,
    ReadUsersUsersGetError,
    ThrowOnError
  >({
    ...options,
    url: '/users/',
  });
};

/**
 * Read Current User
 */
export const readCurrentUserUsersProfileGet = <
  ThrowOnError extends boolean = false
>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReadCurrentUserUsersProfileGetResponse,
    ReadCurrentUserUsersProfileGetError,
    ThrowOnError
  >({
    ...options,
    url: '/users/profile',
  });
};

/**
 * Read User
 */
export const readUserUsersUserIdGet = <ThrowOnError extends boolean = false>(
  options: Options<ReadUserUsersUserIdGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReadUserUsersUserIdGetResponse,
    ReadUserUsersUserIdGetError,
    ThrowOnError
  >({
    ...options,
    url: '/users/{user_id}',
  });
};

/**
 * Create User
 */
export const createUserUsersRegisterPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<CreateUserUsersRegisterPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateUserUsersRegisterPostResponse,
    CreateUserUsersRegisterPostError,
    ThrowOnError
  >({
    ...options,
    url: '/users/register',
  });
};

/**
 * Authenticate User
 */
export const authenticateUserUsersLoginPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<AuthenticateUserUsersLoginPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    AuthenticateUserUsersLoginPostResponse,
    AuthenticateUserUsersLoginPostError,
    ThrowOnError
  >({
    ...options,
    url: '/users/login',
  });
};

/**
 * Logout User
 */
export const logoutUserUsersLogoutPost = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    LogoutUserUsersLogoutPostResponse,
    LogoutUserUsersLogoutPostError,
    ThrowOnError
  >({
    ...options,
    url: '/users/logout',
  });
};
